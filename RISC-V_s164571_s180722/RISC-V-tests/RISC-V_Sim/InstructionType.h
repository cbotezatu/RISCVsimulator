#pragma once

#include <cstdint>

enum class InstructionType : uint16_t
{
	lb		= 0b000000'000'0000011,
	lh		= 0b000000'001'0000011,
	lw		= 0b000000'010'0000011,
	lbu		= 0b000000'100'0000011,
	lhu		= 0b000000'101'0000011,
	fence	= 0b000000'000'0001111,
	fence_i = 0b000000'001'0001111,
	addi	= 0b000000'000'0010011,
	slli	= 0b000000'001'0010011,
	slti	= 0b000000'010'0010011,
	sltiu	= 0b000000'011'0010011,
	xori	= 0b000000'100'0010011,
	srli	= 0b000000'101'0010011,
	srai	= 0b100000'101'0010011,
	ori		= 0b000000'110'0010011,
	andi	= 0b000000'111'0010011,
	auipc	= 0b000000'000'0010111,
	sb		= 0b000000'000'0100011,
	sh		= 0b000000'001'0100011,
	sw		= 0b000000'010'0100011,
	add		= 0b000000'000'0110011,
	sub		= 0b100000'000'0110011,
	sll		= 0b000000'001'0110011,
	slt		= 0b000000'010'0110011,
	sltu    = 0b000000'011'0110011,
	xor_	= 0b000000'100'0110011,
	srl		= 0b000000'101'0110011,
	sra		= 0b100000'101'0110011,
	or_		= 0b000000'110'0110011,
	and_	= 0b000000'111'0110011,
	lui		= 0b000000'000'0110111,
	beq		= 0b000000'000'1100011,
	bne		= 0b000000'001'1100011,
	blt		= 0b000000'100'1100011,
	bge		= 0b000000'101'1100011,
	bltu	= 0b000000'110'1100011,
	bgeu	= 0b000000'111'1100011,
	jalr	= 0b000000'000'1100111,
	jal		= 0b000000'000'1101111,
	ecall	= 0b000000'000'1110011,
	ebreak	= 0b000001'000'1110011,
	csrrw	= 0b000000'001'1110011,
	csrrs	= 0b000000'010'1110011,
	csrrc	= 0b000000'011'1110011,
	csrrwi	= 0b000000'101'1110011,
	csrrsi	= 0b000000'110'1110011,
	csrrci	= 0b000000'111'1110011,

	mul     = 0b000001'000'0110011,
	mulh    = 0b000001'001'0110011,
	mulhsu	= 0b000001'010'0110011,
	mulhu   = 0b000001'011'0110011,
	div	    = 0b000001'100'0110011,
	divu	= 0b000001'101'0110011,
	rem		= 0b000001'110'0110011,
	remu	= 0b000001'111'0110011
};

uint32_t InstructionTypeGetOpCode(const InstructionType type);
uint32_t InstructionTypeFunct3(const InstructionType type);
uint32_t InstructionTypeFunct7(const InstructionType type);